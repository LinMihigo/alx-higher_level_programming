# Test cases for the BaseGeometry class.

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

# Test 1: Test area() method
>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

# Test 2: Valid integer validation
>>> bg.integer_validator("side", 10)  # No exception should be raised

# Test 3: Validate that a non-integer raises TypeError
>>> bg.integer_validator("side", "10")
Traceback (most recent call last):
...
TypeError: side must be an integer

# Test 4: Validate that a negative integer raises ValueError
>>> bg.integer_validator("side", -5)
Traceback (most recent call last):
...
ValueError: side must be greater than 0

# Test 5: Validate that zero raises ValueError
>>> bg.integer_validator("side", 0)
Traceback (most recent call last):
...
ValueError: side must be greater than 0

# Test 6: Validate that a float raises TypeError
>>> bg.integer_validator("side", 5.5)
Traceback (most recent call last):
...
TypeError: side must be an integer

>>> bg.integer_validator("side", None)
Traceback (most recent call last):
...
TypeError: side must be an integer

>>> bg.integer_validator("side", (4,))
Traceback (most recent call last):
...
TypeError: side must be an integer

>>> bg.integer_validator("side", [3])
Traceback (most recent call last):
...
TypeError: side must be an integer

>>> bg.integer_validator("side", True)


>>> bg.integer_validator("side", {3, 4})
Traceback (most recent call last):
...
TypeError: side must be an integer

>>> bg.integer_validator("side", None)
Traceback (most recent call last):
...
TypeError: side must be an integer
